 
Test 1
 
Здравствуйте!
Данная программа создана для демонстрации работы с БДП типа
"Рандомизированная пирамида поиска"(Treap).
В ходе программы будет показан:
1) каждый шаг формирования БДП,
2) как происходит поиск, добавление и удаление элментов из пирамиды.
Вывод БДП реализован в виде уступчатых списков.
Для начала работы, пожалуйста, введите имя файла в формате <имя_файла>.txt
(текстовый файл, где у вас хранится последовательность элементов для формирования БДП)
Введите ключ (целое число), которое вы хотите найти: 
Входная последовательность: 
40 50 20 80 10
---------------------
Шаг № 1

Программа приняла 40
Сейчас произойдет поиск места для вставки.
Текущая БДП:
Пустое БДП!
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.6
Вид пирамиды после вставки элемета (по ключу):
 -   (40; 0.6)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Шаг № 2

Программа приняла 50
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 -   (40; 0.6)
Новый ключ (50) больше 40. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.9
Вид пирамиды после вставки элемета (по ключу):
 --   (40; 0.6)
 -   (50; 0.9)
Приоритет отца (0.6) меньше приоритета правого сына (0.9)
=> по приоритету БДП не соотвествует пирамиде!
Необходим поворот БДП налево, т.к. 0.6 < 0.9
Поворот налево:
(40; 0.6) становится левым сыном своего правого сына (50; 0.9)
Место его правого сына займет левый сын (50; 0.9) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 --   (50; 0.9)
 -   (40; 0.6)
---------------------
Шаг № 3

Программа приняла 20
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 --   (50; 0.9)
 -   (40; 0.6)
Новый ключ (20) меньше 50. Переходим на левую ветвь.
Новый ключ (20) меньше 40. Переходим на левую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.4
Вид пирамиды после вставки элемета (по ключу):
 ---   (50; 0.9)
 --   (40; 0.6)
 -   (20; 0.4)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Шаг № 4

Программа приняла 80
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 ---   (50; 0.9)
 --   (40; 0.6)
 -   (20; 0.4)
Новый ключ (80) больше 50. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.4
Вид пирамиды после вставки элемета (по ключу):
 ---   (50; 0.9)
 --   (40; 0.6)
 -   (20; 0.4)
 --   (80; 0.4)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Шаг № 5

Программа приняла 10
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 ---   (50; 0.9)
 --   (40; 0.6)
 -   (20; 0.4)
 --   (80; 0.4)
Новый ключ (10) меньше 50. Переходим на левую ветвь.
Новый ключ (10) меньше 40. Переходим на левую ветвь.
Новый ключ (10) меньше 20. Переходим на левую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.1
Вид пирамиды после вставки элемета (по ключу):
 ----   (50; 0.9)
 ---   (40; 0.6)
 --   (20; 0.4)
 -   (10; 0.1)
 ---   (80; 0.4)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Поиск элемента 77 в БДП (по ключу)...
Элемент 77 не найден. Сейчас произойдет его добавление.
---------------------
Новый ключ (77) больше 50. Переходим на правую ветвь.
Новый ключ (77) меньше 80. Переходим на левую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.2
Вид пирамиды после вставки элемета (по ключу):
 ----   (50; 0.9)
 ---   (40; 0.6)
 --   (20; 0.4)
 -   (10; 0.1)
 ---   (80; 0.4)
 --   (77; 0.2)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Пирамида с новым элементом:
 ----   (50; 0.9)
 ---   (40; 0.6)
 --   (20; 0.4)
 -   (10; 0.1)
 ---   (80; 0.4)
 --   (77; 0.2)
Удаление элементов пирамиды:
Удаление (10; 0.1)
Удаление (20; 0.4)
Удаление (40; 0.6)
Удаление (77; 0.2)
Удаление (80; 0.4)
Удаление (50; 0.9)
 
Test 2
 
Здравствуйте!
Данная программа создана для демонстрации работы с БДП типа
"Рандомизированная пирамида поиска"(Treap).
В ходе программы будет показан:
1) каждый шаг формирования БДП,
2) как происходит поиск, добавление и удаление элментов из пирамиды.
Вывод БДП реализован в виде уступчатых списков.
Для начала работы, пожалуйста, введите имя файла в формате <имя_файла>.txt
(текстовый файл, где у вас хранится последовательность элементов для формирования БДП)
Введите ключ (целое число), которое вы хотите найти: 
Входная последовательность: 
40 50 20 80 10
---------------------
Шаг № 1

Программа приняла 40
Сейчас произойдет поиск места для вставки.
Текущая БДП:
Пустое БДП!
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.6
Вид пирамиды после вставки элемета (по ключу):
 -   (40; 0.6)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Шаг № 2

Программа приняла 50
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 -   (40; 0.6)
Новый ключ (50) больше 40. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.9
Вид пирамиды после вставки элемета (по ключу):
 --   (40; 0.6)
 -   (50; 0.9)
Приоритет отца (0.6) меньше приоритета правого сына (0.9)
=> по приоритету БДП не соотвествует пирамиде!
Необходим поворот БДП налево, т.к. 0.6 < 0.9
Поворот налево:
(40; 0.6) становится левым сыном своего правого сына (50; 0.9)
Место его правого сына займет левый сын (50; 0.9) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 --   (50; 0.9)
 -   (40; 0.6)
---------------------
Шаг № 3

Программа приняла 20
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 --   (50; 0.9)
 -   (40; 0.6)
Новый ключ (20) меньше 50. Переходим на левую ветвь.
Новый ключ (20) меньше 40. Переходим на левую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.4
Вид пирамиды после вставки элемета (по ключу):
 ---   (50; 0.9)
 --   (40; 0.6)
 -   (20; 0.4)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Шаг № 4

Программа приняла 80
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 ---   (50; 0.9)
 --   (40; 0.6)
 -   (20; 0.4)
Новый ключ (80) больше 50. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.4
Вид пирамиды после вставки элемета (по ключу):
 ---   (50; 0.9)
 --   (40; 0.6)
 -   (20; 0.4)
 --   (80; 0.4)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Шаг № 5

Программа приняла 10
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 ---   (50; 0.9)
 --   (40; 0.6)
 -   (20; 0.4)
 --   (80; 0.4)
Новый ключ (10) меньше 50. Переходим на левую ветвь.
Новый ключ (10) меньше 40. Переходим на левую ветвь.
Новый ключ (10) меньше 20. Переходим на левую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.1
Вид пирамиды после вставки элемета (по ключу):
 ----   (50; 0.9)
 ---   (40; 0.6)
 --   (20; 0.4)
 -   (10; 0.1)
 ---   (80; 0.4)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Поиск элемента 40 в БДП (по ключу)...
Элемент 40 найден!
Построенное БДП:
 ----   (50; 0.9)
 ---   (40; 0.6)
 --   (20; 0.4)
 -   (10; 0.1)
 ---   (80; 0.4)
Удаление элементов пирамиды:
Удаление (10; 0.1)
Удаление (20; 0.4)
Удаление (40; 0.6)
Удаление (80; 0.4)
Удаление (50; 0.9)
 
Test 3
 
Здравствуйте!
Данная программа создана для демонстрации работы с БДП типа
"Рандомизированная пирамида поиска"(Treap).
В ходе программы будет показан:
1) каждый шаг формирования БДП,
2) как происходит поиск, добавление и удаление элментов из пирамиды.
Вывод БДП реализован в виде уступчатых списков.
Для начала работы, пожалуйста, введите имя файла в формате <имя_файла>.txt
(текстовый файл, где у вас хранится последовательность элементов для формирования БДП)
Введите ключ (целое число), которое вы хотите найти: 
Входная последовательность: 
10 7 33 32 88 63 55 332 90
---------------------
Шаг № 1

Программа приняла 10
Сейчас произойдет поиск места для вставки.
Текущая БДП:
Пустое БДП!
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.6
Вид пирамиды после вставки элемета (по ключу):
 -   (10; 0.6)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Шаг № 2

Программа приняла 7
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 -   (10; 0.6)
Новый ключ (7) меньше 10. Переходим на левую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.9
Вид пирамиды после вставки элемета (по ключу):
 --   (10; 0.6)
 -    (7; 0.9)
Приоритет отца (0.6) меньше приоритета левого сына (0.9)
=> по приоритету БДП не соотвествует пирамиде!
Необходим поворот БДП направо, т.к. 0.6 < 0.9
Поворот направо:
(10; 0.6) становится правым сыном своего левого сына (7; 0.9)
Место его леввого сына займет правый сын (7; 0.9) (если он есть, иначе он останется без левого сына).
Вид пирамиды после поворота:
 --    (7; 0.9)
 -   (10; 0.6)
---------------------
Шаг № 3

Программа приняла 33
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 --    (7; 0.9)
 -   (10; 0.6)
Новый ключ (33) больше 7. Переходим на правую ветвь.
Новый ключ (33) больше 10. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.4
Вид пирамиды после вставки элемета (по ключу):
 ---    (7; 0.9)
 --   (10; 0.6)
 -   (33; 0.4)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Шаг № 4

Программа приняла 32
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 ---    (7; 0.9)
 --   (10; 0.6)
 -   (33; 0.4)
Новый ключ (32) больше 7. Переходим на правую ветвь.
Новый ключ (32) больше 10. Переходим на правую ветвь.
Новый ключ (32) меньше 33. Переходим на левую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.4
Вид пирамиды после вставки элемета (по ключу):
 ----    (7; 0.9)
 ---   (10; 0.6)
 --   (33; 0.4)
 -   (32; 0.4)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Шаг № 5

Программа приняла 88
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 ----    (7; 0.9)
 ---   (10; 0.6)
 --   (33; 0.4)
 -   (32; 0.4)
Новый ключ (88) больше 7. Переходим на правую ветвь.
Новый ключ (88) больше 10. Переходим на правую ветвь.
Новый ключ (88) больше 33. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.1
Вид пирамиды после вставки элемета (по ключу):
 ----    (7; 0.9)
 ---   (10; 0.6)
 --   (33; 0.4)
 -   (32; 0.4)
 -   (88; 0.1)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Шаг № 6

Программа приняла 63
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 ----    (7; 0.9)
 ---   (10; 0.6)
 --   (33; 0.4)
 -   (32; 0.4)
 -   (88; 0.1)
Новый ключ (63) больше 7. Переходим на правую ветвь.
Новый ключ (63) больше 10. Переходим на правую ветвь.
Новый ключ (63) больше 33. Переходим на правую ветвь.
Новый ключ (63) меньше 88. Переходим на левую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.2
Вид пирамиды после вставки элемета (по ключу):
 -----    (7; 0.9)
 ----   (10; 0.6)
 ---   (33; 0.4)
 --   (32; 0.4)
 --   (88; 0.1)
 -   (63; 0.2)
Приоритет отца (0.1) меньше приоритета левого сына (0.2)
=> по приоритету БДП не соотвествует пирамиде!
Необходим поворот БДП направо, т.к. 0.1 < 0.2
Поворот направо:
(88; 0.1) становится правым сыном своего левого сына (63; 0.2)
Место его леввого сына займет правый сын (63; 0.2) (если он есть, иначе он останется без левого сына).
Вид пирамиды после поворота:
 -----    (7; 0.9)
 ----   (10; 0.6)
 ---   (33; 0.4)
 --   (32; 0.4)
 --   (63; 0.2)
 -   (88; 0.1)
---------------------
Шаг № 7

Программа приняла 55
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 -----    (7; 0.9)
 ----   (10; 0.6)
 ---   (33; 0.4)
 --   (32; 0.4)
 --   (63; 0.2)
 -   (88; 0.1)
Новый ключ (55) больше 7. Переходим на правую ветвь.
Новый ключ (55) больше 10. Переходим на правую ветвь.
Новый ключ (55) больше 33. Переходим на правую ветвь.
Новый ключ (55) меньше 63. Переходим на левую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.6
Вид пирамиды после вставки элемета (по ключу):
 -----    (7; 0.9)
 ----   (10; 0.6)
 ---   (33; 0.4)
 --   (32; 0.4)
 --   (63; 0.2)
 -   (55; 0.6)
 -   (88; 0.1)
Приоритет отца (0.2) меньше приоритета левого сына (0.6)
=> по приоритету БДП не соотвествует пирамиде!
Необходим поворот БДП направо, т.к. 0.2 < 0.6
Поворот направо:
(63; 0.2) становится правым сыном своего левого сына (55; 0.6)
Место его леввого сына займет правый сын (55; 0.6) (если он есть, иначе он останется без левого сына).
Вид пирамиды после поворота:
 ------    (7; 0.9)
 -----   (10; 0.6)
 ----   (33; 0.4)
 ---   (32; 0.4)
 ---   (55; 0.6)
 --   (63; 0.2)
 -   (88; 0.1)
Приоритет отца (0.4) меньше приоритета правого сына (0.6)
Необходим поворот БДП налево, т.к. 0.4 < 0.6
Поворот налево:
(33; 0.4) становится левым сыном своего правого сына (55; 0.6)
Место его правого сына займет левый сын (55; 0.6) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 -----    (7; 0.9)
 ----   (10; 0.6)
 ---   (55; 0.6)
 --   (33; 0.4)
 -   (32; 0.4)
 --   (63; 0.2)
 -   (88; 0.1)
---------------------
Шаг № 8

Программа приняла 332
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 -----    (7; 0.9)
 ----   (10; 0.6)
 ---   (55; 0.6)
 --   (33; 0.4)
 -   (32; 0.4)
 --   (63; 0.2)
 -   (88; 0.1)
Новый ключ (332) больше 7. Переходим на правую ветвь.
Новый ключ (332) больше 10. Переходим на правую ветвь.
Новый ключ (332) больше 55. Переходим на правую ветвь.
Новый ключ (332) больше 63. Переходим на правую ветвь.
Новый ключ (332) больше 88. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.1
Вид пирамиды после вставки элемета (по ключу):
 ------    (7; 0.9)
 -----   (10; 0.6)
 ----   (55; 0.6)
 ---   (33; 0.4)
 --   (32; 0.4)
 ---   (63; 0.2)
 --   (88; 0.1)
 -  (332; 0.1)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Шаг № 9

Программа приняла 90
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 ------    (7; 0.9)
 -----   (10; 0.6)
 ----   (55; 0.6)
 ---   (33; 0.4)
 --   (32; 0.4)
 ---   (63; 0.2)
 --   (88; 0.1)
 -  (332; 0.1)
Новый ключ (90) больше 7. Переходим на правую ветвь.
Новый ключ (90) больше 10. Переходим на правую ветвь.
Новый ключ (90) больше 55. Переходим на правую ветвь.
Новый ключ (90) больше 63. Переходим на правую ветвь.
Новый ключ (90) больше 88. Переходим на правую ветвь.
Новый ключ (90) меньше 332. Переходим на левую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.8
Вид пирамиды после вставки элемета (по ключу):
 -------    (7; 0.9)
 ------   (10; 0.6)
 -----   (55; 0.6)
 ----   (33; 0.4)
 ---   (32; 0.4)
 ----   (63; 0.2)
 ---   (88; 0.1)
 --  (332; 0.1)
 -   (90; 0.8)
Приоритет отца (0.1) меньше приоритета левого сына (0.8)
=> по приоритету БДП не соотвествует пирамиде!
Необходим поворот БДП направо, т.к. 0.1 < 0.8
Поворот направо:
(332; 0.1) становится правым сыном своего левого сына (90; 0.8)
Место его леввого сына займет правый сын (90; 0.8) (если он есть, иначе он останется без левого сына).
Вид пирамиды после поворота:
 -------    (7; 0.9)
 ------   (10; 0.6)
 -----   (55; 0.6)
 ----   (33; 0.4)
 ---   (32; 0.4)
 ----   (63; 0.2)
 ---   (88; 0.1)
 --   (90; 0.8)
 -  (332; 0.1)
Приоритет отца (0.1) меньше приоритета правого сына (0.8)
Необходим поворот БДП налево, т.к. 0.1 < 0.8
Поворот налево:
(88; 0.1) становится левым сыном своего правого сына (90; 0.8)
Место его правого сына займет левый сын (90; 0.8) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 ------    (7; 0.9)
 -----   (10; 0.6)
 ----   (55; 0.6)
 ---   (33; 0.4)
 --   (32; 0.4)
 ---   (63; 0.2)
 --   (90; 0.8)
 -   (88; 0.1)
 -  (332; 0.1)
Приоритет отца (0.2) меньше приоритета правого сына (0.8)
Необходим поворот БДП налево, т.к. 0.2 < 0.8
Поворот налево:
(63; 0.2) становится левым сыном своего правого сына (90; 0.8)
Место его правого сына займет левый сын (90; 0.8) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 ------    (7; 0.9)
 -----   (10; 0.6)
 ----   (55; 0.6)
 ---   (33; 0.4)
 --   (32; 0.4)
 ---   (90; 0.8)
 --   (63; 0.2)
 -   (88; 0.1)
 --  (332; 0.1)
Приоритет отца (0.6) меньше приоритета правого сына (0.8)
Необходим поворот БДП налево, т.к. 0.6 < 0.8
Поворот налево:
(55; 0.6) становится левым сыном своего правого сына (90; 0.8)
Место его правого сына займет левый сын (90; 0.8) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 ------    (7; 0.9)
 -----   (10; 0.6)
 ----   (90; 0.8)
 ---   (55; 0.6)
 --   (33; 0.4)
 -   (32; 0.4)
 --   (63; 0.2)
 -   (88; 0.1)
 ---  (332; 0.1)
Приоритет отца (0.6) меньше приоритета правого сына (0.8)
Необходим поворот БДП налево, т.к. 0.6 < 0.8
Поворот налево:
(10; 0.6) становится левым сыном своего правого сына (90; 0.8)
Место его правого сына займет левый сын (90; 0.8) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 ------    (7; 0.9)
 -----   (90; 0.8)
 ----   (10; 0.6)
 ---   (55; 0.6)
 --   (33; 0.4)
 -   (32; 0.4)
 --   (63; 0.2)
 -   (88; 0.1)
 ----  (332; 0.1)
---------------------
Поиск элемента 90 в БДП (по ключу)...
Элемент 90 найден!
Построенное БДП:
 ------    (7; 0.9)
 -----   (90; 0.8)
 ----   (10; 0.6)
 ---   (55; 0.6)
 --   (33; 0.4)
 -   (32; 0.4)
 --   (63; 0.2)
 -   (88; 0.1)
 ----  (332; 0.1)
Удаление элементов пирамиды:
Удаление (32; 0.4)
Удаление (33; 0.4)
Удаление (88; 0.1)
Удаление (63; 0.2)
Удаление (55; 0.6)
Удаление (10; 0.6)
Удаление (332; 0.1)
Удаление (90; 0.8)
Удаление (7; 0.9)
 
Test 4
 
Здравствуйте!
Данная программа создана для демонстрации работы с БДП типа
"Рандомизированная пирамида поиска"(Treap).
В ходе программы будет показан:
1) каждый шаг формирования БДП,
2) как происходит поиск, добавление и удаление элментов из пирамиды.
Вывод БДП реализован в виде уступчатых списков.
Для начала работы, пожалуйста, введите имя файла в формате <имя_файла>.txt
(текстовый файл, где у вас хранится последовательность элементов для формирования БДП)
Введите ключ (целое число), которое вы хотите найти: 
Входная последовательность: 
10 7 33 32 88 63 55 332 90
---------------------
Шаг № 1

Программа приняла 10
Сейчас произойдет поиск места для вставки.
Текущая БДП:
Пустое БДП!
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.6
Вид пирамиды после вставки элемета (по ключу):
 -   (10; 0.6)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Шаг № 2

Программа приняла 7
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 -   (10; 0.6)
Новый ключ (7) меньше 10. Переходим на левую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.9
Вид пирамиды после вставки элемета (по ключу):
 --   (10; 0.6)
 -    (7; 0.9)
Приоритет отца (0.6) меньше приоритета левого сына (0.9)
=> по приоритету БДП не соотвествует пирамиде!
Необходим поворот БДП направо, т.к. 0.6 < 0.9
Поворот направо:
(10; 0.6) становится правым сыном своего левого сына (7; 0.9)
Место его леввого сына займет правый сын (7; 0.9) (если он есть, иначе он останется без левого сына).
Вид пирамиды после поворота:
 --    (7; 0.9)
 -   (10; 0.6)
---------------------
Шаг № 3

Программа приняла 33
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 --    (7; 0.9)
 -   (10; 0.6)
Новый ключ (33) больше 7. Переходим на правую ветвь.
Новый ключ (33) больше 10. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.4
Вид пирамиды после вставки элемета (по ключу):
 ---    (7; 0.9)
 --   (10; 0.6)
 -   (33; 0.4)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Шаг № 4

Программа приняла 32
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 ---    (7; 0.9)
 --   (10; 0.6)
 -   (33; 0.4)
Новый ключ (32) больше 7. Переходим на правую ветвь.
Новый ключ (32) больше 10. Переходим на правую ветвь.
Новый ключ (32) меньше 33. Переходим на левую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.4
Вид пирамиды после вставки элемета (по ключу):
 ----    (7; 0.9)
 ---   (10; 0.6)
 --   (33; 0.4)
 -   (32; 0.4)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Шаг № 5

Программа приняла 88
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 ----    (7; 0.9)
 ---   (10; 0.6)
 --   (33; 0.4)
 -   (32; 0.4)
Новый ключ (88) больше 7. Переходим на правую ветвь.
Новый ключ (88) больше 10. Переходим на правую ветвь.
Новый ключ (88) больше 33. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.1
Вид пирамиды после вставки элемета (по ключу):
 ----    (7; 0.9)
 ---   (10; 0.6)
 --   (33; 0.4)
 -   (32; 0.4)
 -   (88; 0.1)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Шаг № 6

Программа приняла 63
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 ----    (7; 0.9)
 ---   (10; 0.6)
 --   (33; 0.4)
 -   (32; 0.4)
 -   (88; 0.1)
Новый ключ (63) больше 7. Переходим на правую ветвь.
Новый ключ (63) больше 10. Переходим на правую ветвь.
Новый ключ (63) больше 33. Переходим на правую ветвь.
Новый ключ (63) меньше 88. Переходим на левую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.2
Вид пирамиды после вставки элемета (по ключу):
 -----    (7; 0.9)
 ----   (10; 0.6)
 ---   (33; 0.4)
 --   (32; 0.4)
 --   (88; 0.1)
 -   (63; 0.2)
Приоритет отца (0.1) меньше приоритета левого сына (0.2)
=> по приоритету БДП не соотвествует пирамиде!
Необходим поворот БДП направо, т.к. 0.1 < 0.2
Поворот направо:
(88; 0.1) становится правым сыном своего левого сына (63; 0.2)
Место его леввого сына займет правый сын (63; 0.2) (если он есть, иначе он останется без левого сына).
Вид пирамиды после поворота:
 -----    (7; 0.9)
 ----   (10; 0.6)
 ---   (33; 0.4)
 --   (32; 0.4)
 --   (63; 0.2)
 -   (88; 0.1)
---------------------
Шаг № 7

Программа приняла 55
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 -----    (7; 0.9)
 ----   (10; 0.6)
 ---   (33; 0.4)
 --   (32; 0.4)
 --   (63; 0.2)
 -   (88; 0.1)
Новый ключ (55) больше 7. Переходим на правую ветвь.
Новый ключ (55) больше 10. Переходим на правую ветвь.
Новый ключ (55) больше 33. Переходим на правую ветвь.
Новый ключ (55) меньше 63. Переходим на левую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.6
Вид пирамиды после вставки элемета (по ключу):
 -----    (7; 0.9)
 ----   (10; 0.6)
 ---   (33; 0.4)
 --   (32; 0.4)
 --   (63; 0.2)
 -   (55; 0.6)
 -   (88; 0.1)
Приоритет отца (0.2) меньше приоритета левого сына (0.6)
=> по приоритету БДП не соотвествует пирамиде!
Необходим поворот БДП направо, т.к. 0.2 < 0.6
Поворот направо:
(63; 0.2) становится правым сыном своего левого сына (55; 0.6)
Место его леввого сына займет правый сын (55; 0.6) (если он есть, иначе он останется без левого сына).
Вид пирамиды после поворота:
 ------    (7; 0.9)
 -----   (10; 0.6)
 ----   (33; 0.4)
 ---   (32; 0.4)
 ---   (55; 0.6)
 --   (63; 0.2)
 -   (88; 0.1)
Приоритет отца (0.4) меньше приоритета правого сына (0.6)
Необходим поворот БДП налево, т.к. 0.4 < 0.6
Поворот налево:
(33; 0.4) становится левым сыном своего правого сына (55; 0.6)
Место его правого сына займет левый сын (55; 0.6) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 -----    (7; 0.9)
 ----   (10; 0.6)
 ---   (55; 0.6)
 --   (33; 0.4)
 -   (32; 0.4)
 --   (63; 0.2)
 -   (88; 0.1)
---------------------
Шаг № 8

Программа приняла 332
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 -----    (7; 0.9)
 ----   (10; 0.6)
 ---   (55; 0.6)
 --   (33; 0.4)
 -   (32; 0.4)
 --   (63; 0.2)
 -   (88; 0.1)
Новый ключ (332) больше 7. Переходим на правую ветвь.
Новый ключ (332) больше 10. Переходим на правую ветвь.
Новый ключ (332) больше 55. Переходим на правую ветвь.
Новый ключ (332) больше 63. Переходим на правую ветвь.
Новый ключ (332) больше 88. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.1
Вид пирамиды после вставки элемета (по ключу):
 ------    (7; 0.9)
 -----   (10; 0.6)
 ----   (55; 0.6)
 ---   (33; 0.4)
 --   (32; 0.4)
 ---   (63; 0.2)
 --   (88; 0.1)
 -  (332; 0.1)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Шаг № 9

Программа приняла 90
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 ------    (7; 0.9)
 -----   (10; 0.6)
 ----   (55; 0.6)
 ---   (33; 0.4)
 --   (32; 0.4)
 ---   (63; 0.2)
 --   (88; 0.1)
 -  (332; 0.1)
Новый ключ (90) больше 7. Переходим на правую ветвь.
Новый ключ (90) больше 10. Переходим на правую ветвь.
Новый ключ (90) больше 55. Переходим на правую ветвь.
Новый ключ (90) больше 63. Переходим на правую ветвь.
Новый ключ (90) больше 88. Переходим на правую ветвь.
Новый ключ (90) меньше 332. Переходим на левую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.8
Вид пирамиды после вставки элемета (по ключу):
 -------    (7; 0.9)
 ------   (10; 0.6)
 -----   (55; 0.6)
 ----   (33; 0.4)
 ---   (32; 0.4)
 ----   (63; 0.2)
 ---   (88; 0.1)
 --  (332; 0.1)
 -   (90; 0.8)
Приоритет отца (0.1) меньше приоритета левого сына (0.8)
=> по приоритету БДП не соотвествует пирамиде!
Необходим поворот БДП направо, т.к. 0.1 < 0.8
Поворот направо:
(332; 0.1) становится правым сыном своего левого сына (90; 0.8)
Место его леввого сына займет правый сын (90; 0.8) (если он есть, иначе он останется без левого сына).
Вид пирамиды после поворота:
 -------    (7; 0.9)
 ------   (10; 0.6)
 -----   (55; 0.6)
 ----   (33; 0.4)
 ---   (32; 0.4)
 ----   (63; 0.2)
 ---   (88; 0.1)
 --   (90; 0.8)
 -  (332; 0.1)
Приоритет отца (0.1) меньше приоритета правого сына (0.8)
Необходим поворот БДП налево, т.к. 0.1 < 0.8
Поворот налево:
(88; 0.1) становится левым сыном своего правого сына (90; 0.8)
Место его правого сына займет левый сын (90; 0.8) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 ------    (7; 0.9)
 -----   (10; 0.6)
 ----   (55; 0.6)
 ---   (33; 0.4)
 --   (32; 0.4)
 ---   (63; 0.2)
 --   (90; 0.8)
 -   (88; 0.1)
 -  (332; 0.1)
Приоритет отца (0.2) меньше приоритета правого сына (0.8)
Необходим поворот БДП налево, т.к. 0.2 < 0.8
Поворот налево:
(63; 0.2) становится левым сыном своего правого сына (90; 0.8)
Место его правого сына займет левый сын (90; 0.8) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 ------    (7; 0.9)
 -----   (10; 0.6)
 ----   (55; 0.6)
 ---   (33; 0.4)
 --   (32; 0.4)
 ---   (90; 0.8)
 --   (63; 0.2)
 -   (88; 0.1)
 --  (332; 0.1)
Приоритет отца (0.6) меньше приоритета правого сына (0.8)
Необходим поворот БДП налево, т.к. 0.6 < 0.8
Поворот налево:
(55; 0.6) становится левым сыном своего правого сына (90; 0.8)
Место его правого сына займет левый сын (90; 0.8) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 ------    (7; 0.9)
 -----   (10; 0.6)
 ----   (90; 0.8)
 ---   (55; 0.6)
 --   (33; 0.4)
 -   (32; 0.4)
 --   (63; 0.2)
 -   (88; 0.1)
 ---  (332; 0.1)
Приоритет отца (0.6) меньше приоритета правого сына (0.8)
Необходим поворот БДП налево, т.к. 0.6 < 0.8
Поворот налево:
(10; 0.6) становится левым сыном своего правого сына (90; 0.8)
Место его правого сына займет левый сын (90; 0.8) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 ------    (7; 0.9)
 -----   (90; 0.8)
 ----   (10; 0.6)
 ---   (55; 0.6)
 --   (33; 0.4)
 -   (32; 0.4)
 --   (63; 0.2)
 -   (88; 0.1)
 ----  (332; 0.1)
---------------------
Поиск элемента 123 в БДП (по ключу)...
Элемент 123 не найден. Сейчас произойдет его добавление.
---------------------
Новый ключ (123) больше 7. Переходим на правую ветвь.
Новый ключ (123) больше 90. Переходим на правую ветвь.
Новый ключ (123) меньше 332. Переходим на левую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0
Вид пирамиды после вставки элемета (по ключу):
 ------    (7; 0.9)
 -----   (90; 0.8)
 ----   (10; 0.6)
 ---   (55; 0.6)
 --   (33; 0.4)
 -   (32; 0.4)
 --   (63; 0.2)
 -   (88; 0.1)
 ----  (332; 0.1)
 ---  (123; 0.0)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Пирамида с новым элементом:
 ------    (7; 0.9)
 -----   (90; 0.8)
 ----   (10; 0.6)
 ---   (55; 0.6)
 --   (33; 0.4)
 -   (32; 0.4)
 --   (63; 0.2)
 -   (88; 0.1)
 ----  (332; 0.1)
 ---  (123; 0.0)
Удаление элементов пирамиды:
Удаление (32; 0.4)
Удаление (33; 0.4)
Удаление (88; 0.1)
Удаление (63; 0.2)
Удаление (55; 0.6)
Удаление (10; 0.6)
Удаление (123; 0)
Удаление (332; 0.1)
Удаление (90; 0.8)
Удаление (7; 0.9)
 
Test 5
 
Здравствуйте!
Данная программа создана для демонстрации работы с БДП типа
"Рандомизированная пирамида поиска"(Treap).
В ходе программы будет показан:
1) каждый шаг формирования БДП,
2) как происходит поиск, добавление и удаление элментов из пирамиды.
Вывод БДП реализован в виде уступчатых списков.
Для начала работы, пожалуйста, введите имя файла в формате <имя_файла>.txt
(текстовый файл, где у вас хранится последовательность элементов для формирования БДП)
Введите ключ (целое число), которое вы хотите найти: 
Входная последовательность: 
10 7
---------------------
Шаг № 1

Программа приняла 10
Сейчас произойдет поиск места для вставки.
Текущая БДП:
Пустое БДП!
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.6
Вид пирамиды после вставки элемета (по ключу):
 -   (10; 0.6)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Шаг № 2

Программа приняла 7
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 -   (10; 0.6)
Новый ключ (7) меньше 10. Переходим на левую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.9
Вид пирамиды после вставки элемета (по ключу):
 --   (10; 0.6)
 -    (7; 0.9)
Приоритет отца (0.6) меньше приоритета левого сына (0.9)
=> по приоритету БДП не соотвествует пирамиде!
Необходим поворот БДП направо, т.к. 0.6 < 0.9
Поворот направо:
(10; 0.6) становится правым сыном своего левого сына (7; 0.9)
Место его леввого сына займет правый сын (7; 0.9) (если он есть, иначе он останется без левого сына).
Вид пирамиды после поворота:
 --    (7; 0.9)
 -   (10; 0.6)
---------------------
Поиск элемента 15 в БДП (по ключу)...
Элемент 15 не найден. Сейчас произойдет его добавление.
---------------------
Новый ключ (15) больше 7. Переходим на правую ветвь.
Новый ключ (15) больше 10. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.4
Вид пирамиды после вставки элемета (по ключу):
 ---    (7; 0.9)
 --   (10; 0.6)
 -   (15; 0.4)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Пирамида с новым элементом:
 ---    (7; 0.9)
 --   (10; 0.6)
 -   (15; 0.4)
Удаление элементов пирамиды:
Удаление (15; 0.4)
Удаление (10; 0.6)
Удаление (7; 0.9)
 
Test 6
 
Здравствуйте!
Данная программа создана для демонстрации работы с БДП типа
"Рандомизированная пирамида поиска"(Treap).
В ходе программы будет показан:
1) каждый шаг формирования БДП,
2) как происходит поиск, добавление и удаление элментов из пирамиды.
Вывод БДП реализован в виде уступчатых списков.
Для начала работы, пожалуйста, введите имя файла в формате <имя_файла>.txt
(текстовый файл, где у вас хранится последовательность элементов для формирования БДП)
Введите ключ (целое число), которое вы хотите найти: 
Входная последовательность: 
10 7
---------------------
Шаг № 1

Программа приняла 10
Сейчас произойдет поиск места для вставки.
Текущая БДП:
Пустое БДП!
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.6
Вид пирамиды после вставки элемета (по ключу):
 -   (10; 0.6)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Шаг № 2

Программа приняла 7
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 -   (10; 0.6)
Новый ключ (7) меньше 10. Переходим на левую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.9
Вид пирамиды после вставки элемета (по ключу):
 --   (10; 0.6)
 -    (7; 0.9)
Приоритет отца (0.6) меньше приоритета левого сына (0.9)
=> по приоритету БДП не соотвествует пирамиде!
Необходим поворот БДП направо, т.к. 0.6 < 0.9
Поворот направо:
(10; 0.6) становится правым сыном своего левого сына (7; 0.9)
Место его леввого сына займет правый сын (7; 0.9) (если он есть, иначе он останется без левого сына).
Вид пирамиды после поворота:
 --    (7; 0.9)
 -   (10; 0.6)
---------------------
Поиск элемента 10 в БДП (по ключу)...
Элемент 10 найден!
Построенное БДП:
 --    (7; 0.9)
 -   (10; 0.6)
Удаление элементов пирамиды:
Удаление (10; 0.6)
Удаление (7; 0.9)
 
Test 7
 
Здравствуйте!
Данная программа создана для демонстрации работы с БДП типа
"Рандомизированная пирамида поиска"(Treap).
В ходе программы будет показан:
1) каждый шаг формирования БДП,
2) как происходит поиск, добавление и удаление элментов из пирамиды.
Вывод БДП реализован в виде уступчатых списков.
Для начала работы, пожалуйста, введите имя файла в формате <имя_файла>.txt
(текстовый файл, где у вас хранится последовательность элементов для формирования БДП)
Введите ключ (целое число), которое вы хотите найти: 
Входная последовательность: 
10 20 30 40 50 60 70 80 90 100
---------------------
Шаг № 1

Программа приняла 10
Сейчас произойдет поиск места для вставки.
Текущая БДП:
Пустое БДП!
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.6
Вид пирамиды после вставки элемета (по ключу):
 -   (10; 0.6)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Шаг № 2

Программа приняла 20
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 -   (10; 0.6)
Новый ключ (20) больше 10. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.9
Вид пирамиды после вставки элемета (по ключу):
 --   (10; 0.6)
 -   (20; 0.9)
Приоритет отца (0.6) меньше приоритета правого сына (0.9)
=> по приоритету БДП не соотвествует пирамиде!
Необходим поворот БДП налево, т.к. 0.6 < 0.9
Поворот налево:
(10; 0.6) становится левым сыном своего правого сына (20; 0.9)
Место его правого сына займет левый сын (20; 0.9) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 --   (20; 0.9)
 -   (10; 0.6)
---------------------
Шаг № 3

Программа приняла 30
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 --   (20; 0.9)
 -   (10; 0.6)
Новый ключ (30) больше 20. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.4
Вид пирамиды после вставки элемета (по ключу):
 --   (20; 0.9)
 -   (10; 0.6)
 -   (30; 0.4)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Шаг № 4

Программа приняла 40
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 --   (20; 0.9)
 -   (10; 0.6)
 -   (30; 0.4)
Новый ключ (40) больше 20. Переходим на правую ветвь.
Новый ключ (40) больше 30. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.4
Вид пирамиды после вставки элемета (по ключу):
 ---   (20; 0.9)
 --   (10; 0.6)
 --   (30; 0.4)
 -   (40; 0.4)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Шаг № 5

Программа приняла 50
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 ---   (20; 0.9)
 --   (10; 0.6)
 --   (30; 0.4)
 -   (40; 0.4)
Новый ключ (50) больше 20. Переходим на правую ветвь.
Новый ключ (50) больше 30. Переходим на правую ветвь.
Новый ключ (50) больше 40. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.1
Вид пирамиды после вставки элемета (по ключу):
 ----   (20; 0.9)
 ---   (10; 0.6)
 ---   (30; 0.4)
 --   (40; 0.4)
 -   (50; 0.1)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Шаг № 6

Программа приняла 60
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 ----   (20; 0.9)
 ---   (10; 0.6)
 ---   (30; 0.4)
 --   (40; 0.4)
 -   (50; 0.1)
Новый ключ (60) больше 20. Переходим на правую ветвь.
Новый ключ (60) больше 30. Переходим на правую ветвь.
Новый ключ (60) больше 40. Переходим на правую ветвь.
Новый ключ (60) больше 50. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.2
Вид пирамиды после вставки элемета (по ключу):
 -----   (20; 0.9)
 ----   (10; 0.6)
 ----   (30; 0.4)
 ---   (40; 0.4)
 --   (50; 0.1)
 -   (60; 0.2)
Приоритет отца (0.1) меньше приоритета правого сына (0.2)
=> по приоритету БДП не соотвествует пирамиде!
Необходим поворот БДП налево, т.к. 0.1 < 0.2
Поворот налево:
(50; 0.1) становится левым сыном своего правого сына (60; 0.2)
Место его правого сына займет левый сын (60; 0.2) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 -----   (20; 0.9)
 ----   (10; 0.6)
 ----   (30; 0.4)
 ---   (40; 0.4)
 --   (60; 0.2)
 -   (50; 0.1)
---------------------
Шаг № 7

Программа приняла 70
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 -----   (20; 0.9)
 ----   (10; 0.6)
 ----   (30; 0.4)
 ---   (40; 0.4)
 --   (60; 0.2)
 -   (50; 0.1)
Новый ключ (70) больше 20. Переходим на правую ветвь.
Новый ключ (70) больше 30. Переходим на правую ветвь.
Новый ключ (70) больше 40. Переходим на правую ветвь.
Новый ключ (70) больше 60. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.6
Вид пирамиды после вставки элемета (по ключу):
 -----   (20; 0.9)
 ----   (10; 0.6)
 ----   (30; 0.4)
 ---   (40; 0.4)
 --   (60; 0.2)
 -   (50; 0.1)
 -   (70; 0.6)
Приоритет отца (0.2) меньше приоритета правого сына (0.6)
=> по приоритету БДП не соотвествует пирамиде!
Необходим поворот БДП налево, т.к. 0.2 < 0.6
Поворот налево:
(60; 0.2) становится левым сыном своего правого сына (70; 0.6)
Место его правого сына займет левый сын (70; 0.6) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 ------   (20; 0.9)
 -----   (10; 0.6)
 -----   (30; 0.4)
 ----   (40; 0.4)
 ---   (70; 0.6)
 --   (60; 0.2)
 -   (50; 0.1)
Приоритет отца (0.4) меньше приоритета правого сына (0.6)
Необходим поворот БДП налево, т.к. 0.4 < 0.6
Поворот налево:
(40; 0.4) становится левым сыном своего правого сына (70; 0.6)
Место его правого сына займет левый сын (70; 0.6) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 ------   (20; 0.9)
 -----   (10; 0.6)
 -----   (30; 0.4)
 ----   (70; 0.6)
 ---   (40; 0.4)
 --   (60; 0.2)
 -   (50; 0.1)
Приоритет отца (0.4) меньше приоритета правого сына (0.6)
Необходим поворот БДП налево, т.к. 0.4 < 0.6
Поворот налево:
(30; 0.4) становится левым сыном своего правого сына (70; 0.6)
Место его правого сына займет левый сын (70; 0.6) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 ------   (20; 0.9)
 -----   (10; 0.6)
 -----   (70; 0.6)
 ----   (30; 0.4)
 ---   (40; 0.4)
 --   (60; 0.2)
 -   (50; 0.1)
---------------------
Шаг № 8

Программа приняла 80
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 ------   (20; 0.9)
 -----   (10; 0.6)
 -----   (70; 0.6)
 ----   (30; 0.4)
 ---   (40; 0.4)
 --   (60; 0.2)
 -   (50; 0.1)
Новый ключ (80) больше 20. Переходим на правую ветвь.
Новый ключ (80) больше 70. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.1
Вид пирамиды после вставки элемета (по ключу):
 ------   (20; 0.9)
 -----   (10; 0.6)
 -----   (70; 0.6)
 ----   (30; 0.4)
 ---   (40; 0.4)
 --   (60; 0.2)
 -   (50; 0.1)
 ----   (80; 0.1)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Шаг № 9

Программа приняла 90
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 ------   (20; 0.9)
 -----   (10; 0.6)
 -----   (70; 0.6)
 ----   (30; 0.4)
 ---   (40; 0.4)
 --   (60; 0.2)
 -   (50; 0.1)
 ----   (80; 0.1)
Новый ключ (90) больше 20. Переходим на правую ветвь.
Новый ключ (90) больше 70. Переходим на правую ветвь.
Новый ключ (90) больше 80. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.8
Вид пирамиды после вставки элемета (по ключу):
 ------   (20; 0.9)
 -----   (10; 0.6)
 -----   (70; 0.6)
 ----   (30; 0.4)
 ---   (40; 0.4)
 --   (60; 0.2)
 -   (50; 0.1)
 ----   (80; 0.1)
 ---   (90; 0.8)
Приоритет отца (0.1) меньше приоритета правого сына (0.8)
=> по приоритету БДП не соотвествует пирамиде!
Необходим поворот БДП налево, т.к. 0.1 < 0.8
Поворот налево:
(80; 0.1) становится левым сыном своего правого сына (90; 0.8)
Место его правого сына займет левый сын (90; 0.8) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 ------   (20; 0.9)
 -----   (10; 0.6)
 -----   (70; 0.6)
 ----   (30; 0.4)
 ---   (40; 0.4)
 --   (60; 0.2)
 -   (50; 0.1)
 ----   (90; 0.8)
 ---   (80; 0.1)
Приоритет отца (0.6) меньше приоритета правого сына (0.8)
Необходим поворот БДП налево, т.к. 0.6 < 0.8
Поворот налево:
(70; 0.6) становится левым сыном своего правого сына (90; 0.8)
Место его правого сына займет левый сын (90; 0.8) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 -------   (20; 0.9)
 ------   (10; 0.6)
 ------   (90; 0.8)
 -----   (70; 0.6)
 ----   (30; 0.4)
 ---   (40; 0.4)
 --   (60; 0.2)
 -   (50; 0.1)
 ----   (80; 0.1)
---------------------
Шаг № 10

Программа приняла 100
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 -------   (20; 0.9)
 ------   (10; 0.6)
 ------   (90; 0.8)
 -----   (70; 0.6)
 ----   (30; 0.4)
 ---   (40; 0.4)
 --   (60; 0.2)
 -   (50; 0.1)
 ----   (80; 0.1)
Новый ключ (100) больше 20. Переходим на правую ветвь.
Новый ключ (100) больше 90. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0
Вид пирамиды после вставки элемета (по ключу):
 -------   (20; 0.9)
 ------   (10; 0.6)
 ------   (90; 0.8)
 -----   (70; 0.6)
 ----   (30; 0.4)
 ---   (40; 0.4)
 --   (60; 0.2)
 -   (50; 0.1)
 ----   (80; 0.1)
 -----  (100; 0.0)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Поиск элемента 50 в БДП (по ключу)...
Элемент 50 найден!
Построенное БДП:
 -------   (20; 0.9)
 ------   (10; 0.6)
 ------   (90; 0.8)
 -----   (70; 0.6)
 ----   (30; 0.4)
 ---   (40; 0.4)
 --   (60; 0.2)
 -   (50; 0.1)
 ----   (80; 0.1)
 -----  (100; 0.0)
Удаление элементов пирамиды:
Удаление (10; 0.6)
Удаление (50; 0.1)
Удаление (60; 0.2)
Удаление (40; 0.4)
Удаление (30; 0.4)
Удаление (80; 0.1)
Удаление (70; 0.6)
Удаление (100; 0)
Удаление (90; 0.8)
Удаление (20; 0.9)
 
Test 8
 
Здравствуйте!
Данная программа создана для демонстрации работы с БДП типа
"Рандомизированная пирамида поиска"(Treap).
В ходе программы будет показан:
1) каждый шаг формирования БДП,
2) как происходит поиск, добавление и удаление элментов из пирамиды.
Вывод БДП реализован в виде уступчатых списков.
Для начала работы, пожалуйста, введите имя файла в формате <имя_файла>.txt
(текстовый файл, где у вас хранится последовательность элементов для формирования БДП)
Введите ключ (целое число), которое вы хотите найти: 
Входная последовательность: 
10 20 30 40 50 60 70 80 90 100
---------------------
Шаг № 1

Программа приняла 10
Сейчас произойдет поиск места для вставки.
Текущая БДП:
Пустое БДП!
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.6
Вид пирамиды после вставки элемета (по ключу):
 -   (10; 0.6)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Шаг № 2

Программа приняла 20
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 -   (10; 0.6)
Новый ключ (20) больше 10. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.9
Вид пирамиды после вставки элемета (по ключу):
 --   (10; 0.6)
 -   (20; 0.9)
Приоритет отца (0.6) меньше приоритета правого сына (0.9)
=> по приоритету БДП не соотвествует пирамиде!
Необходим поворот БДП налево, т.к. 0.6 < 0.9
Поворот налево:
(10; 0.6) становится левым сыном своего правого сына (20; 0.9)
Место его правого сына займет левый сын (20; 0.9) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 --   (20; 0.9)
 -   (10; 0.6)
---------------------
Шаг № 3

Программа приняла 30
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 --   (20; 0.9)
 -   (10; 0.6)
Новый ключ (30) больше 20. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.4
Вид пирамиды после вставки элемета (по ключу):
 --   (20; 0.9)
 -   (10; 0.6)
 -   (30; 0.4)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Шаг № 4

Программа приняла 40
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 --   (20; 0.9)
 -   (10; 0.6)
 -   (30; 0.4)
Новый ключ (40) больше 20. Переходим на правую ветвь.
Новый ключ (40) больше 30. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.4
Вид пирамиды после вставки элемета (по ключу):
 ---   (20; 0.9)
 --   (10; 0.6)
 --   (30; 0.4)
 -   (40; 0.4)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Шаг № 5

Программа приняла 50
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 ---   (20; 0.9)
 --   (10; 0.6)
 --   (30; 0.4)
 -   (40; 0.4)
Новый ключ (50) больше 20. Переходим на правую ветвь.
Новый ключ (50) больше 30. Переходим на правую ветвь.
Новый ключ (50) больше 40. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.1
Вид пирамиды после вставки элемета (по ключу):
 ----   (20; 0.9)
 ---   (10; 0.6)
 ---   (30; 0.4)
 --   (40; 0.4)
 -   (50; 0.1)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Шаг № 6

Программа приняла 60
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 ----   (20; 0.9)
 ---   (10; 0.6)
 ---   (30; 0.4)
 --   (40; 0.4)
 -   (50; 0.1)
Новый ключ (60) больше 20. Переходим на правую ветвь.
Новый ключ (60) больше 30. Переходим на правую ветвь.
Новый ключ (60) больше 40. Переходим на правую ветвь.
Новый ключ (60) больше 50. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.2
Вид пирамиды после вставки элемета (по ключу):
 -----   (20; 0.9)
 ----   (10; 0.6)
 ----   (30; 0.4)
 ---   (40; 0.4)
 --   (50; 0.1)
 -   (60; 0.2)
Приоритет отца (0.1) меньше приоритета правого сына (0.2)
=> по приоритету БДП не соотвествует пирамиде!
Необходим поворот БДП налево, т.к. 0.1 < 0.2
Поворот налево:
(50; 0.1) становится левым сыном своего правого сына (60; 0.2)
Место его правого сына займет левый сын (60; 0.2) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 -----   (20; 0.9)
 ----   (10; 0.6)
 ----   (30; 0.4)
 ---   (40; 0.4)
 --   (60; 0.2)
 -   (50; 0.1)
---------------------
Шаг № 7

Программа приняла 70
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 -----   (20; 0.9)
 ----   (10; 0.6)
 ----   (30; 0.4)
 ---   (40; 0.4)
 --   (60; 0.2)
 -   (50; 0.1)
Новый ключ (70) больше 20. Переходим на правую ветвь.
Новый ключ (70) больше 30. Переходим на правую ветвь.
Новый ключ (70) больше 40. Переходим на правую ветвь.
Новый ключ (70) больше 60. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.6
Вид пирамиды после вставки элемета (по ключу):
 -----   (20; 0.9)
 ----   (10; 0.6)
 ----   (30; 0.4)
 ---   (40; 0.4)
 --   (60; 0.2)
 -   (50; 0.1)
 -   (70; 0.6)
Приоритет отца (0.2) меньше приоритета правого сына (0.6)
=> по приоритету БДП не соотвествует пирамиде!
Необходим поворот БДП налево, т.к. 0.2 < 0.6
Поворот налево:
(60; 0.2) становится левым сыном своего правого сына (70; 0.6)
Место его правого сына займет левый сын (70; 0.6) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 ------   (20; 0.9)
 -----   (10; 0.6)
 -----   (30; 0.4)
 ----   (40; 0.4)
 ---   (70; 0.6)
 --   (60; 0.2)
 -   (50; 0.1)
Приоритет отца (0.4) меньше приоритета правого сына (0.6)
Необходим поворот БДП налево, т.к. 0.4 < 0.6
Поворот налево:
(40; 0.4) становится левым сыном своего правого сына (70; 0.6)
Место его правого сына займет левый сын (70; 0.6) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 ------   (20; 0.9)
 -----   (10; 0.6)
 -----   (30; 0.4)
 ----   (70; 0.6)
 ---   (40; 0.4)
 --   (60; 0.2)
 -   (50; 0.1)
Приоритет отца (0.4) меньше приоритета правого сына (0.6)
Необходим поворот БДП налево, т.к. 0.4 < 0.6
Поворот налево:
(30; 0.4) становится левым сыном своего правого сына (70; 0.6)
Место его правого сына займет левый сын (70; 0.6) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 ------   (20; 0.9)
 -----   (10; 0.6)
 -----   (70; 0.6)
 ----   (30; 0.4)
 ---   (40; 0.4)
 --   (60; 0.2)
 -   (50; 0.1)
---------------------
Шаг № 8

Программа приняла 80
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 ------   (20; 0.9)
 -----   (10; 0.6)
 -----   (70; 0.6)
 ----   (30; 0.4)
 ---   (40; 0.4)
 --   (60; 0.2)
 -   (50; 0.1)
Новый ключ (80) больше 20. Переходим на правую ветвь.
Новый ключ (80) больше 70. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.1
Вид пирамиды после вставки элемета (по ключу):
 ------   (20; 0.9)
 -----   (10; 0.6)
 -----   (70; 0.6)
 ----   (30; 0.4)
 ---   (40; 0.4)
 --   (60; 0.2)
 -   (50; 0.1)
 ----   (80; 0.1)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Шаг № 9

Программа приняла 90
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 ------   (20; 0.9)
 -----   (10; 0.6)
 -----   (70; 0.6)
 ----   (30; 0.4)
 ---   (40; 0.4)
 --   (60; 0.2)
 -   (50; 0.1)
 ----   (80; 0.1)
Новый ключ (90) больше 20. Переходим на правую ветвь.
Новый ключ (90) больше 70. Переходим на правую ветвь.
Новый ключ (90) больше 80. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.8
Вид пирамиды после вставки элемета (по ключу):
 ------   (20; 0.9)
 -----   (10; 0.6)
 -----   (70; 0.6)
 ----   (30; 0.4)
 ---   (40; 0.4)
 --   (60; 0.2)
 -   (50; 0.1)
 ----   (80; 0.1)
 ---   (90; 0.8)
Приоритет отца (0.1) меньше приоритета правого сына (0.8)
=> по приоритету БДП не соотвествует пирамиде!
Необходим поворот БДП налево, т.к. 0.1 < 0.8
Поворот налево:
(80; 0.1) становится левым сыном своего правого сына (90; 0.8)
Место его правого сына займет левый сын (90; 0.8) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 ------   (20; 0.9)
 -----   (10; 0.6)
 -----   (70; 0.6)
 ----   (30; 0.4)
 ---   (40; 0.4)
 --   (60; 0.2)
 -   (50; 0.1)
 ----   (90; 0.8)
 ---   (80; 0.1)
Приоритет отца (0.6) меньше приоритета правого сына (0.8)
Необходим поворот БДП налево, т.к. 0.6 < 0.8
Поворот налево:
(70; 0.6) становится левым сыном своего правого сына (90; 0.8)
Место его правого сына займет левый сын (90; 0.8) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 -------   (20; 0.9)
 ------   (10; 0.6)
 ------   (90; 0.8)
 -----   (70; 0.6)
 ----   (30; 0.4)
 ---   (40; 0.4)
 --   (60; 0.2)
 -   (50; 0.1)
 ----   (80; 0.1)
---------------------
Шаг № 10

Программа приняла 100
Сейчас произойдет поиск места для вставки.
Текущая БДП:
 -------   (20; 0.9)
 ------   (10; 0.6)
 ------   (90; 0.8)
 -----   (70; 0.6)
 ----   (30; 0.4)
 ---   (40; 0.4)
 --   (60; 0.2)
 -   (50; 0.1)
 ----   (80; 0.1)
Новый ключ (100) больше 20. Переходим на правую ветвь.
Новый ключ (100) больше 90. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0
Вид пирамиды после вставки элемета (по ключу):
 -------   (20; 0.9)
 ------   (10; 0.6)
 ------   (90; 0.8)
 -----   (70; 0.6)
 ----   (30; 0.4)
 ---   (40; 0.4)
 --   (60; 0.2)
 -   (50; 0.1)
 ----   (80; 0.1)
 -----  (100; 0.0)
По приоритету БДП соотвествует пирамиде! Дальнейших преобразований не требуется!
---------------------
Поиск элемента 55 в БДП (по ключу)...
Элемент 55 не найден. Сейчас произойдет его добавление.
---------------------
Новый ключ (55) больше 20. Переходим на правую ветвь.
Новый ключ (55) меньше 90. Переходим на левую ветвь.
Новый ключ (55) меньше 70. Переходим на левую ветвь.
Новый ключ (55) больше 30. Переходим на правую ветвь.
Новый ключ (55) больше 40. Переходим на правую ветвь.
Новый ключ (55) меньше 60. Переходим на левую ветвь.
Новый ключ (55) больше 50. Переходим на правую ветвь.
Место для нового элемента (по ключу) найдено!
Сгенерирован приоритет = 0.5
Вид пирамиды после вставки элемета (по ключу):
 --------   (20; 0.9)
 -------   (10; 0.6)
 -------   (90; 0.8)
 ------   (70; 0.6)
 -----   (30; 0.4)
 ----   (40; 0.4)
 ---   (60; 0.2)
 --   (50; 0.1)
 -   (55; 0.5)
 -----   (80; 0.1)
 ------  (100; 0.0)
Приоритет отца (0.1) меньше приоритета правого сына (0.5)
=> по приоритету БДП не соотвествует пирамиде!
Необходим поворот БДП налево, т.к. 0.1 < 0.5
Поворот налево:
(50; 0.1) становится левым сыном своего правого сына (55; 0.5)
Место его правого сына займет левый сын (55; 0.5) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 --------   (20; 0.9)
 -------   (10; 0.6)
 -------   (90; 0.8)
 ------   (70; 0.6)
 -----   (30; 0.4)
 ----   (40; 0.4)
 ---   (60; 0.2)
 --   (55; 0.5)
 -   (50; 0.1)
 -----   (80; 0.1)
 ------  (100; 0.0)
Приоритет отца (0.2) меньше приоритета левого сына (0.5)
Необходим поворот БДП направо, т.к. 0.2 < 0.5
Поворот направо:
(60; 0.2) становится правым сыном своего левого сына (55; 0.5)
Место его леввого сына займет правый сын (55; 0.5) (если он есть, иначе он останется без левого сына).
Вид пирамиды после поворота:
 -------   (20; 0.9)
 ------   (10; 0.6)
 ------   (90; 0.8)
 -----   (70; 0.6)
 ----   (30; 0.4)
 ---   (40; 0.4)
 --   (55; 0.5)
 -   (50; 0.1)
 -   (60; 0.2)
 ----   (80; 0.1)
 -----  (100; 0.0)
Приоритет отца (0.4) меньше приоритета правого сына (0.5)
Необходим поворот БДП налево, т.к. 0.4 < 0.5
Поворот налево:
(40; 0.4) становится левым сыном своего правого сына (55; 0.5)
Место его правого сына займет левый сын (55; 0.5) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 -------   (20; 0.9)
 ------   (10; 0.6)
 ------   (90; 0.8)
 -----   (70; 0.6)
 ----   (30; 0.4)
 ---   (55; 0.5)
 --   (40; 0.4)
 -   (50; 0.1)
 --   (60; 0.2)
 ----   (80; 0.1)
 -----  (100; 0.0)
Приоритет отца (0.4) меньше приоритета правого сына (0.5)
Необходим поворот БДП налево, т.к. 0.4 < 0.5
Поворот налево:
(30; 0.4) становится левым сыном своего правого сына (55; 0.5)
Место его правого сына займет левый сын (55; 0.5) (если он есть, иначе он останется без правого сына).
Вид пирамиды после поворота:
 -------   (20; 0.9)
 ------   (10; 0.6)
 ------   (90; 0.8)
 -----   (70; 0.6)
 ----   (55; 0.5)
 ---   (30; 0.4)
 --   (40; 0.4)
 -   (50; 0.1)
 ---   (60; 0.2)
 ----   (80; 0.1)
 -----  (100; 0.0)
---------------------
Пирамида с новым элементом:
 -------   (20; 0.9)
 ------   (10; 0.6)
 ------   (90; 0.8)
 -----   (70; 0.6)
 ----   (55; 0.5)
 ---   (30; 0.4)
 --   (40; 0.4)
 -   (50; 0.1)
 ---   (60; 0.2)
 ----   (80; 0.1)
 -----  (100; 0.0)
Удаление элементов пирамиды:
Удаление (10; 0.6)
Удаление (50; 0.1)
Удаление (40; 0.4)
Удаление (30; 0.4)
Удаление (60; 0.2)
Удаление (55; 0.5)
Удаление (80; 0.1)
Удаление (70; 0.6)
Удаление (100; 0)
Удаление (90; 0.8)
Удаление (20; 0.9)
 
Test 9
 
Здравствуйте!
Данная программа создана для демонстрации работы с БДП типа
"Рандомизированная пирамида поиска"(Treap).
В ходе программы будет показан:
1) каждый шаг формирования БДП,
2) как происходит поиск, добавление и удаление элментов из пирамиды.
Вывод БДП реализован в виде уступчатых списков.
Для начала работы, пожалуйста, введите имя файла в формате <имя_файла>.txt
(текстовый файл, где у вас хранится последовательность элементов для формирования БДП)
Введите ключ (целое число), которое вы хотите найти: 
Входная последовательность: 

---------------------
БДП пусто! Программа завершена!
